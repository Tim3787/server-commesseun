// ====== BACKEND EXPRESS API ======

const express = require("express");
const router = express.Router();
const db = require('../config/db');

// GET tipi di scheda multi (distinti per tipo)

router.get("/:id/note", async (req, res) => {
  try {
    const [rows] = await db.query(
      `SELECT n.*, r.nome AS creato_da_nome
       FROM SchedeTecnicheNote n
       LEFT JOIN risorse r ON n.autore_id = r.id
       WHERE n.scheda_tecnica_id = ?
       ORDER BY n.data DESC`,
      [req.params.id]
    );
    res.json(rows);
  } catch (err) {
    res.status(500).json({ error: "Errore durante il recupero delle note" });
  }
});

router.post("/:id/note", async (req, res) => {
  const { autore_id, contenuto, allegato_path } = req.body;
  try {
    const [result] = await db.query(`
      INSERT INTO SchedeTecnicheNote (scheda_tecnica_id, autore_id, contenuto, allegato_path)
      VALUES (?, ?, ?, ?)
    `, [
      req.params.id,
      autore_id,
      contenuto,
      allegato_path || null
    ]);

    const [newNote] = await db.query(`
      SELECT n.*, r.nome AS autore_nome
      FROM SchedeTecnicheNote n
      LEFT JOIN risorse r ON n.autore_id = r.id
      WHERE n.id = ?
    `, [result.insertId]);

    res.status(201).json(newNote[0]);
  } catch (err) {
    console.error("Errore durante la creazione della nota:", err.message);
    res.status(500).send("Errore durante la creazione della nota.");
  }
});


router.put("/note/:id", async (req, res) => {
  const { contenuto, allegato_path } = req.body;
  try {
    await db.query(`
      UPDATE SchedeTecnicheNote
      SET contenuto = ?, allegato_path = ?, data_ultima_modifica = CURRENT_TIMESTAMP
      WHERE id = ?
    `, [contenuto, allegato_path || null, req.params.id]);

    res.status(200).send("Nota aggiornata con successo.");
  } catch (err) {
    console.error("Errore aggiornamento nota:", err.message);
    res.status(500).send("Errore aggiornamento nota.");
  }
});



router.delete("/note/:id", async (req, res) => {
  try {
    await db.query(`DELETE FROM SchedeTecnicheNote WHERE id = ?`, [req.params.id]);
    res.status(200).send("Nota eliminata con successo.");
  } catch (err) {
    console.error("Errore eliminazione nota:", err.message);
    res.status(500).send("Errore eliminazione nota.");
  }
});

module.exports = router;
