// ====== BACKEND EXPRESS API ======

const express = require("express");
const router = express.Router();
const db = require('../config/db');

// GET tipi di scheda multi (distinti per tipo)

router.get("/:id/note", async (req, res) => {
  try {
    const [rows] = await db.query(
      `SELECT * FROM SchedeTecnicheNote WHERE scheda_tecnica_id = ? ORDER BY data DESC`,
      [req.params.id]
    );
    res.json(rows);
  } catch (err) {
    res.status(500).json({ error: "Errore durante il recupero delle note" });
  }
});

router.post("/:id/note", async (req, res) => {
  try {
    const { contenuto, autore_id } = req.body;
    await db.query(
      `INSERT INTO SchedeTecnicheNote (scheda_tecnica_id, data, autore_id, contenuto, allegato_path, modifiche)
       VALUES (?, NOW(), ?, ?, NULL, '')`,
      [req.params.id, autore_id, contenuto]
    );
    res.json({ success: true });
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: "Errore durante l'aggiunta della nota" });
  }
});

router.put("/note/:id", async (req, res) => {
  try {
    const { data, autore_id, contenuto, allegato_path, modifiche } = req.body;

    await db.query(
      `UPDATE SchedeTecnicheNote 
       SET data=?, autore_id=?, contenuto=?, allegato_path=?, modifiche=? 
       WHERE id=?`,
      [data, autore_id, contenuto, allegato_path || null, modifiche || '', req.params.id]
    );

    res.json({ success: true });
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: "Errore durante la modifica della nota" });
  }
});

router.delete("/note/:id", async (req, res) => {
  try {
    await db.query("DELETE FROM SchedeTecnicheNote WHERE id = ?", [req.params.id]);
    res.json({ success: true });
  } catch (err) {
    res.status(500).json({ error: "Errore durante l'eliminazione della nota" });
  }
});



module.exports = router;
